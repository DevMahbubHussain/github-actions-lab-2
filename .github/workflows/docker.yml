name: Docker Nginx CI/CD

on:
  push:
    branches:
      - main

jobs:
  docker:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: mynginx
      DOCKERHUB_USER: ${{ secrets.DOCKER_USERNAME }}
      IMAGE_TAG: ${{ github.run_number }} # Auto-incremented tag

    steps:
      # 1Ô∏è‚É£ Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2Ô∏è‚É£ Set up Docker Buildx for caching and multi-platform builds
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3Ô∏è‚É£ Cache Docker layers for faster builds
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4Ô∏è‚É£ Login to DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # 5Ô∏è‚É£ Build and push image with tag and cache
      - name: Build and Push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      # 6Ô∏è‚É£ Move cache for next runs
      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      # 7Ô∏è‚É£ Test image locally (optional)
      - name: Test Docker image
        run: |
          docker run -d -p 8080:80 --name test-nginx ${{ env.DOCKERHUB_USER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          sleep 5
          curl -f http://localhost:8080 | grep "Hello from GitHub Actions"
          docker stop test-nginx

  # üñ•Ô∏è Deploy to AWS EC2
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/mynginx:latest
            docker stop mynginx || true
            docker rm mynginx || true
            docker run -d -p 80:80 --name mynginx ${{ secrets.DOCKER_USERNAME }}/mynginx:latest
